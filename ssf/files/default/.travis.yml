# -*- coding: utf-8 -*-
# vim: ft=yaml
---
{%- from tplroot ~ "/libcimatrix.jinja" import format_ci_matrix with context %}
## Machine config
dist: {{ travis.dist }}
{%- if platforms and not use_cirrus_ci %}
sudo: required
services:
  - docker
{%-   set travis_addons = travis.addons %}
{%-   if travis_addons %}

# yamllint disable rule:indentation
addons:
{%-     filter indent(2) %}
{{ travis_addons | yaml(False) }}
{%-     endfilter %}
# yamllint enable rule:indentation
{%-   endif %}

## Language and cache config
language: ruby
cache: bundler

## Script to run for the test stage
script:
  {%- for pre_cmd in script_kitchen.pre %}
  - {{ pre_cmd }}
  {%- endfor %}
  - {{ script_kitchen.bin }} {{ script_kitchen.cmd }} "${INSTANCE}"
  {%- for post_cmd in script_kitchen.post %}
  - {{ post_cmd }}
  {%- endfor %}
{%- endif %}

## Stages and jobs matrix
stages:
  - test
  - name: release
    if: branch = master AND type != pull_request
jobs:
  include:
    ## Define the test stage that runs the linters (and testing matrix, if applicable)

    # Run all of the linters in a single job
    - language: node_js
      node_js: lts/*
      env: Lint
      name: 'Lint: salt-lint, yamllint, rubocop & commitlint'
      before_install: skip
      script:
        # Install and run `salt-lint`
        - pip install --user salt-lint
        - git ls-files | grep '\.sls$\|\.jinja$\|\.j2$\|\.tmpl$'
                       | xargs -I {} salt-lint {}
        # Install and run `yamllint`
        # Need at least `v1.17.0` for the `yaml-files` setting
        - pip install --user yamllint>=1.17.0
        - yamllint -s .
        # Install and run `rubocop`
        - gem install rubocop
        - rubocop -d
        # Install and run `commitlint`
        - npm install @commitlint/config-conventional -D
        - npm install @commitlint/travis-cli -D
        - commitlint-travis

    {%- if platforms and not use_cirrus_ci %}

    ## Define the rest of the matrix based on Kitchen testing
    # Make sure the instances listed below match up with
    # the `platforms` defined in `kitchen.yml`
    {%-   if semrel_formula == 'template' %}
    # NOTE: Please try to select up to six instances that add some meaningful
    #       testing of the formula's behaviour. If possible, try to refrain from
    #       the classical "chosing all the instances because I want to test on
    #       another/all distro/s" trap: it will just add time to the testing (see
    #       the discussion on #121).  As an example, the set chosen below covers
    #       the most used distros families, systemd and non-systemd and the latest
    #       three supported Saltstack versions with python2 and 3.
    #       As for `kitchen.yml`, that should still contain all of the platforms,
    #       to allow for comprehensive local testing
    #       Ref: https://github.com/saltstack-formulas/template-formula/issues/118
    #       Ref: https://github.com/saltstack-formulas/template-formula/issues/121
    {%-   elif semrel_formula == 'salt' %}
    # The ordering used below has been selected based on the time required in Travis
    # The slower ones are kept as high up as possible, to run concurrently rather than
    # slow down the entire run at the end (i.e. `centos-6` and `opensuse`)
    # However, the groupings needed to be maintained in some semblance of order
    # so this is a best-effort matrix, in the circumstances
    {%-   endif %}
    {{- format_ci_matrix(platforms, inspec_suites_kitchen, inspec_suites_matrix, platforms_matrix, platforms_matrix_commented_includes, semrel_formula, use_new_travis_format=True) }}
    {%- endif %}

    ## Define the release stage that runs `semantic-release`
    - stage: release
      language: node_js
      node_js: lts/*
      env: Release
      name: 'Run semantic-release inc. file updates to AUTHORS, CHANGELOG & FORMULA'
      before_install: skip
      script:
        # Update `AUTHORS.md`
        - export MAINTAINER_TOKEN=${GH_TOKEN}
        - go get github.com/myii/maintainer
        - maintainer contributor

        # Install all dependencies required for `semantic-release`
        - npm install @semantic-release/changelog@3 -D
        - npm install @semantic-release/exec@3 -D
        - npm install @semantic-release/git@7 -D
      deploy:
        provider: script
        skip_cleanup: true
        script:
          # Run `semantic-release`
          - npx semantic-release@15
